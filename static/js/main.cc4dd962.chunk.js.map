{"version":3,"sources":["reduxFt/userSlice.js","components/NavBar/index.js","components/SearchBar/index.js","components/Blogs/index.js","App.js","reduxFt/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectUserData","user","selectSearchInput","Navbar","useDispatch","useSelector","react_default","a","createElement","className","Body","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","dispatch","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","checkAndPostBlogs","blogs","articles","Fragment","map","blog","index","key","href","url","src","image","alt","source","publishedAt","Date","toLocaleDateString","title","description","Blogs","blogURL","concat","setBlogs","useEffect","axios","get","then","response","data","catch","error","console","log","totalArticles","App","components_NavBar","SearchBar","components_Blogs","configureStore","reducer","userReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","createRoot","document","getElementById","render","es","store","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cc4dd962.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isSignedIn: false,\n    userData: \"\",\n    searchInput: \"top headlines\",\n    blogData: null,\n  },\n  reducers: {\n    setSignedIn: (state, action) => {\n      state.isSignedIn = action.payload;\n    },\n    setUserData: (state, action) => {\n      state.userData = action.payload;\n    },\n    setInput: (state, action) => {\n      state.searchInput = action.payload;\n    },\n    setBlogData: (state, action) => {\n      state.blogData = action.payload;\n    },\n  },\n});\n\nexport const {\n  setBlogData,\n  setInput,\n  setSignedIn,\n  setUserData,\n} = userSlice.actions;\n\nexport const selectSignedIn = (state) => state.user.isSignedIn;\nexport const selectUserData = (state) => state.user.userData;\nexport const selectSearchInput = (state) => state.user.searchInput;\nexport const selectBlogData = (state) => state.user.blogData;\n\nexport default userSlice.reducer;\n","import React from \"react\";\nimport \"./NavBar.css\";\nimport GoogleLogin from \"react-google-login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectUserData,\n  setSignedIn,\n  setUserData,\n} from \"../../reduxFt/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const userData = useSelector(selectUserData);\n  // const login = (response) => {\n  //   console.log(response);\n  //   dispatch(setSignedIn(true));\n  //   dispatch(setUserData(response.profileObj));\n  // };\n\n  return (\n    <div>\n      <nav className=\"navBar\">\n        <div className=\"navBarContainer\">\n          <div className=\"navLogo\">\n            <spam>QA</spam>\n            Blog\n          </div>\n\n          {/* <GoogleLogin\n            clientId=\"24743533305-34dff6evfue77cic6cfl1m71tddgm1du.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                className=\"login_button\"\n              >\n                LogIn\n              </button>\n            )}\n            onSuccess={login}\n            onFailure={login}\n            isSignedIn={true}\n            cookiePolicy={\"single_host_origin\"}\n          /> */}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setInput } from \"../../reduxFt/userSlice\";\nimport \"./searchbar.css\";\n\nfunction Body() {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const submitSearch = (e) => {\n    e.preventDefault();\n    dispatch(setInput(inputValue));\n  };\n\n  return (\n    <div>\n      <form className=\"searchBar\">\n        <input\n          className=\"searchInput\"\n          placeholder=\"Search Blog\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button\n          disabled={!inputValue}\n          className=\"submitBtn\"\n          onClick={submitSearch}\n        >\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchInput, setBlogData } from \"../../reduxFt/userSlice\";\nimport \"./blogs.css\";\n\nfunction checkAndPostBlogs(blogs) {\n  if (blogs && blogs.articles) {\n    return (\n      <>\n        {blogs.articles.map((blog, index) => (\n          <div className=\"blog\" key={index}>\n            <a target=\"_blank\" href={blog.url}>\n              <img className=\"blogImg\" src={blog.image} alt=\"Blog Image\" />\n              <div>\n                <h3 className=\"blogSource\">\n                  <span>{blog.source.name}</span>\n                  <span>{dateFormater(blog.publishedAt)}</span>\n                </h3>\n                <h2>{blog.title}</h2>\n                <hr></hr>\n                <p>{blog.description}</p>\n              </div>\n            </a>\n          </div>\n        ))}\n      </>\n    );\n  } else {\n    return <h1>empty search</h1>;\n  }\n}\n\nfunction Blogs() {\n  const searchInput = useSelector(selectSearchInput);\n  const blogURL = `https://gnews.io/api/v4/search?q=${searchInput}&token=852fa02c3cc479bc710f5e87c7b3d7b9`;\n\n  const dispatch = useDispatch();\n\n  const [blogs, setBlogs] = useState(\"apple\");\n\n  useEffect(() => {\n    axios\n      .get(blogURL)\n      .then((response) => {\n        dispatch(setBlogData(response.data));\n        setBlogs(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [searchInput]);\n\n  return (\n    <div className=\"blogContainer\">\n      {blogs.articles && checkAndPostBlogs(blogs)}\n      {blogs.totalArticles == 0 && (\n        <div className=\"noResultFound\">\n          <h1>Hmmm.....</h1>\n          <h2>We couldn't find any matches for \"{searchInput}\"</h2>\n          <p>\n            Please double check your search for any typos or spelling errors or\n            use more generic search terms\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction dateFormater(publishedAt) {\n  let date = new Date(publishedAt);\n  return date.toLocaleDateString();\n}\n\nexport default Blogs;\n","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport SearchBar from \"./components/SearchBar\";\nimport Blogs from \"./components/Blogs\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <SearchBar />\n      <Blogs />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\n\nexport default configureStore(\n  {\n    reducer: {\n      user: userReducer,\n    },\n  },\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxFt/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n"],"sourceRoot":""}